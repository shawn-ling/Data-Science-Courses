source('~/GitHub/ProgrammingAssignment2/cachematrix.R')
x <- matrix(1:9, 3, 3)
x
makeCacheMatrix(x)
cacheSolve(x)
makeCacheMatrix(x)
debugSource('~/GitHub/ProgrammingAssignment2/cachematrix.R')
cacheSolve(x)
debugSource('~/GitHub/ProgrammingAssignment2/cachematrix.R')
cacheSolve(x)
debugSource('~/GitHub/ProgrammingAssignment2/cachematrix.R')
debugSource('~/GitHub/ProgrammingAssignment2/cachematrix.R')
cacheSolve(x)
debugSource('~/GitHub/ProgrammingAssignment2/cachematrix.R')
cacheSolve(x)
debugSource('~/GitHub/ProgrammingAssignment2/cachematrix.R')
cacheSolve(x)
cacheSolve(x)
list_x <- makeCacheMatrix(x)
cacheSolve(list_x)
debugSource('~/GitHub/ProgrammingAssignment2/cachematrix.R')
debugSource('~/GitHub/ProgrammingAssignment2/cachematrix.R')
cacheSolve(list_x)
cacheSolve(list_x)
list_x <- makeCacheMatrix(x)
list_x$get()
list_x$set(x)
list_x$get()
matrix_x <- makeCacheMatrix(x)
matrix_x
matrix_x$set
matrix_x$set(x)
matrix_x$set
matrix_x$get
matrix_x$get()
debugSource('~/GitHub/ProgrammingAssignment2/cachematrix.R')
debugSource('~/GitHub/ProgrammingAssignment2/cachematrix.R')
matrix_x$get()
matrix_x$set(x)
matrix_x$get()
source('~/GitHub/ProgrammingAssignment2/cachematrix.R')
source('~/GitHub/ProgrammingAssignment2/cachematrix.R')
matrix_x <- makeCacheMatrix(x)
matrix_x$get()
cacheSolve(matrix_x)
?matrix
?rnorm
x[3,3] = 100
x
matrix_x <- makeCacheMatrix(x)
matrix_x$get()
cacheSolve(matrix_x)
source('~/GitHub/ProgrammingAssignment2/cachematrix.R')
source('~/GitHub/ProgrammingAssignment2/cachematrix.R')
matrix_x <- makeCacheMatrix(x)
matrix_x$get()
cacheSolve(matrix_x)
source('~/GitHub/ProgrammingAssignment2/cachematrix.R')
source('~/GitHub/ProgrammingAssignment2/cachematrix.R')
matrix_x <- makeCacheMatrix(x)
matrix_x$get()
cacheSolve(matrix_x)
source('~/GitHub/ProgrammingAssignment2/cachematrix.R')
source('~/GitHub/ProgrammingAssignment2/cachematrix.R')
source('~/GitHub/ProgrammingAssignment2/cachematrix.R')
matrix_x <- makeCacheMatrix(x)
matrix_x$get()
cacheSolve(matrix_x)
cacheSolve(matrix_x)
source('~/GitHub/ProgrammingAssignment2/cachematrix.R')
source('~/GitHub/ProgrammingAssignment2/cachematrix.R')
set.seed(1)
rpois(5,2)
?qpois
?wd
?workdirectory
?chwd
getwd
?getwd
getwd()
setwd(ProgrammingAssignment3)
setwd(~/ProgrammingAssignment3)
setwd(~\ProgrammingAssignment3)
list()
list()
list(getwd())
setwd(getwd()/ProgrammingAssignment3)
dir()
cd(ProgrammingAssignment3)
setwd(ProgrammingAssignment3)
setwd(C:\Users\i045177\Documents\GitHub\ProgrammingAssignment3)
setwd(C:/Users/i045177/Documents/GitHub/ProgrammingAssignment3)
setwd("C:/Users/i045177/Documents/GitHub/ProgrammingAssignment3")
dir()
outcome <- read.csv("outcome-of-care-measures.csv", colClasses = "character")
head(outcome)
nrow(outcome)
ncol(outcome)
names(outcome)
?names
outcome[, 11] <- as.numeric(outcome[, 11])
hist(outcome[, 11])
outcome[, 7]
check <- outcome[,7] = state
check <- outcome[,7] = "TX"
check <- outcome(State = "TX")
sel_outcome = subset(outcome, State = "TX", select = c(State, Hospital.Name))
sel_outcome
sel_outcome = subset(outcome, State = TX, select = c(State, Hospital.Name))
nrow(sel_outcome)
sel_outcome = subset(outcome, State == TX, select = c(State, Hospital.Name))
sel_outcome = subset(outcome, State == "TX", select = c(State, Hospital.Name))
nrow(sel_outcome)
sel_outcome
source('~/GitHub/ProgrammingAssignment3/best.R')
head(outcome)
names(outcome)
debugSource('~/GitHub/ProgrammingAssignment3/best.R')
best("TX", "Hospital.30.Day.Readmission.Rates.from.Heart.Attack")
best("TX", "Hospital.30.Day.Readmission.Rates.from.Heart.Attack")
debugSource('~/GitHub/ProgrammingAssignment3/best.R')
debugSource('~/GitHub/ProgrammingAssignment3/best.R')
best("TX", "Hospital.30.Day.Readmission.Rates.from.Heart.Attack")
debugSource('~/GitHub/ProgrammingAssignment3/best.R')
best("TX", "Hospital.30.Day.Readmission.Rates.from.Heart.Attack")
best("TX", "Hospital.30.Day.Readmission.Rates.from.Heart.Attack")
debugSource('~/GitHub/ProgrammingAssignment3/best.R')
best("TX", "Hospital.30.Day.Readmission.Rates.from.Heart.Attack")
debugSource('~/GitHub/ProgrammingAssignment3/best.R')
debugSource('~/GitHub/ProgrammingAssignment3/best.R')
best("TX", "Hospital.30.Day.Readmission.Rates.from.Heart.Attack")
best("TX", "Hospital.30.Day.Readmission.Rates.from.Heart.Attack")
debugSource('~/GitHub/ProgrammingAssignment3/best.R')
debugSource('~/GitHub/ProgrammingAssignment3/best.R')
debugSource('~/GitHub/ProgrammingAssignment3/best.R')
debugSource('~/GitHub/ProgrammingAssignment3/best.R')
best("TX", "Hospital.30.Day.Readmission.Rates.from.Heart.Attack")
debugSource('~/GitHub/ProgrammingAssignment3/best.R')
debugSource('~/GitHub/ProgrammingAssignment3/best.R')
best("TX", "Hospital.30.Day.Readmission.Rates.from.Heart.Attack")
debugSource('~/GitHub/ProgrammingAssignment3/best.R')
debugSource('~/GitHub/ProgrammingAssignment3/best.R')
best("TX", "Hospital.30.Day.Readmission.Rates.from.Heart.Attack")
debugSource('~/GitHub/ProgrammingAssignment3/best.R')
debugSource('~/GitHub/ProgrammingAssignment3/best.R')
debugSource('~/GitHub/ProgrammingAssignment3/best.R')
debugSource('~/GitHub/ProgrammingAssignment3/best.R')
debugSource('~/GitHub/ProgrammingAssignment3/best.R')
debugSource('~/GitHub/ProgrammingAssignment3/best.R')
best("TX", "Hospital.30.Day.Readmission.Rates.from.Heart.Attack")
names(outcome)
debugSource('~/GitHub/ProgrammingAssignment3/best.R')
debugSource('~/GitHub/ProgrammingAssignment3/best.R')
debugSource('~/GitHub/ProgrammingAssignment3/best.R')
debugSource('~/GitHub/ProgrammingAssignment3/best.R')
best("TX", "Hospital.30.Day.Readmission.Rates.from.Heart.Attack")
View(sel_outcome)
debugSource('~/GitHub/ProgrammingAssignment3/best.R')
debugSource('~/GitHub/ProgrammingAssignment3/best.R')
best("TX", "Hospital.30.Day.Readmission.Rates.from.Heart.Attack")
View(x)
View(sel_outcome)
debugSource('~/GitHub/ProgrammingAssignment3/best.R')
debugSource('~/GitHub/ProgrammingAssignment3/best.R')
debugSource('~/GitHub/ProgrammingAssignment3/best.R')
debugSource('~/GitHub/ProgrammingAssignment3/best.R')
debugSource('~/GitHub/ProgrammingAssignment3/best.R')
best("TX", "City")
source('~/GitHub/ProgrammingAssignment3/best.R')
source('~/GitHub/ProgrammingAssignment3/best.R')
best("TX", "City")
best("TX", "City")
View(sel_outcome)
debugSource('~/GitHub/ProgrammingAssignment3/best.R')
debugSource('~/GitHub/ProgrammingAssignment3/best.R')
debugSource('~/GitHub/ProgrammingAssignment3/best.R')
debugSource('~/GitHub/ProgrammingAssignment3/best.R')
best("TX", "City")
debugSource('~/GitHub/ProgrammingAssignment3/best.R')
debugSource('~/GitHub/ProgrammingAssignment3/best.R')
debugSource('~/GitHub/ProgrammingAssignment3/best.R')
best("TX", "City")
View(sel_outcome)
debugSource('~/GitHub/ProgrammingAssignment3/best.R')
debugSource('~/GitHub/ProgrammingAssignment3/best.R')
best("TX", "City")
debugSource('~/GitHub/ProgrammingAssignment3/best.R')
debugSource('~/GitHub/ProgrammingAssignment3/best.R')
debugSource('~/GitHub/ProgrammingAssignment3/best.R')
best("TX", "City")
debugSource('~/GitHub/ProgrammingAssignment3/best.R')
best("TX", "City")
View(sel_outcome)
View(outcome)
debugSource('~/GitHub/ProgrammingAssignment3/best.R')
debugSource('~/GitHub/ProgrammingAssignment3/best.R')
best("TX", "City")
View(sel_outcome)
View(all_outcome)
debugSource('~/GitHub/ProgrammingAssignment3/best.R')
debugSource('~/GitHub/ProgrammingAssignment3/best.R')
debugSource('~/GitHub/ProgrammingAssignment3/best.R')
debugSource('~/GitHub/ProgrammingAssignment3/best.R')
best("TX", "heart attack")
View(sel_outcome)
max.col(sel_outcome, ties.method = "first")
max.col(sel_outcome[,3], ties.method = "first")
?colmax
?max.col
max.col(sel_outcome)
max.col(sel_outcome, rm.remove = TRUE)
max.row(sel_outcome)
maxrow(sel_outcome)
max.col(sel_outcome[,3])
max.col(sel_outcome)
sel_outcome[,3]
best("TX", "heart attack")
sel_outcome[,3]
max.col(sel_outcome[,3])
sel_outcome[,3]
use <- is.numeric(sel_outcome[,3])
use
use <- sel_outcome[,3] > 0
use
use <- sel_outcome[,3] != "Not Available"
use
sel_outcome = sel_outcome[use]
sel_2 = sel_outcome[use]
debugSource('~/GitHub/ProgrammingAssignment3/best.R')
debugSource('~/GitHub/ProgrammingAssignment3/best.R')
best("TX", "heart attack")
debugSource('~/GitHub/ProgrammingAssignment3/best.R')
debugSource('~/GitHub/ProgrammingAssignment3/best.R')
debugSource('~/GitHub/ProgrammingAssignment3/best.R')
debugSource('~/GitHub/ProgrammingAssignment3/best.R')
debugSource('~/GitHub/ProgrammingAssignment3/best.R')
best("TX", "heart attack")
View(sel_outcome)
debugSource('~/GitHub/ProgrammingAssignment3/best.R')
debugSource('~/GitHub/ProgrammingAssignment3/best.R')
best("TX", "heart attack")
apply(sel_outcome, 2, max, na.rm = TRUE)
apply(sel_outcome, 2, max)
apply(sel_outcome[,3], 2, max)
apply(sel_outcome, 2, max)
best("TX", "heart attack")
max(sel_outcome[,3], na.rm = TRUE)
sort(sel_outcome, Hospital.Name)
sort(sel_outcome, "Hospital.Name")
?rank
rank(outcome[,11])
debugSource('~/GitHub/ProgrammingAssignment3/best.R')
best("TX", "heart attack")
View(good)
install.packages("manipulate")
install.packages("swirl")
library("swirl", lib.loc="~/R/win-library/3.1")
library(swirl)
swirl()
1
bye()
swirl()
5+7
x <- 5 + 7
x
y <- x - 3
y
c(1.1, 9, 3.14)
z < - c(1.1, 9, 3.14)
info()
z <- c(1.1, 9, 3.14)
?c
z
c(z, 555)
c(z, 555, z)
z * 2 + 100
my_sqrt <- sqrt(z - 1)
my_sqrt
my_div <- z / my_sqrt
my_div
c(1, 2, 3, 4) + c(0, 10)
c(1, 2, 3, 4) + c(0, 10, 100)
z * 2 + 1000
my_div
